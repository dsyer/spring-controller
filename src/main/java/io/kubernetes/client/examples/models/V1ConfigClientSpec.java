/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package io.kubernetes.client.examples.models;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * ConfigClientSpec defines the desired state of ConfigClient
 */
@ApiModel(description = "ConfigClientSpec defines the desired state of ConfigClient")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen",
		date = "2020-12-04T15:50:40.049Z[Etc/UTC]")
public class V1ConfigClientSpec {

	public static final String SERIALIZED_NAME_URL = "url";

	@SerializedName(SERIALIZED_NAME_URL)
	private String url;

	public V1ConfigClientSpec url(String url) {

		this.url = url;
		return this;
	}

	/**
	 * Get url
	 * @return url
	 **/
	@javax.annotation.Nullable
	@ApiModelProperty(value = "")

	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@Override
	public boolean equals(Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		V1ConfigClientSpec v1ConfigClientSpec = (V1ConfigClientSpec) o;
		return Objects.equals(this.url, v1ConfigClientSpec.url);
	}

	@Override
	public int hashCode() {
		return Objects.hash(url);
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class V1ConfigClientSpec {\n");
		sb.append("    url: ").append(toIndentedString(url)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	/**
	 * Convert the given object to string with each line indented by 4 spaces (except the
	 * first line).
	 */
	private String toIndentedString(Object o) {
		if (o == null) {
			return "null";
		}
		return o.toString().replace("\n", "\n    ");
	}

}
